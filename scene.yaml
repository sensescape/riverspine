import: 
    - https://tangrams.github.io/blocks/lines/dots-glow.yaml
    - https://tangrams.github.io/blocks/lines/glow.yaml
    - https://tangrams.github.io/blocks/elevation/stripes.yaml
    - https://tangrams.github.io/blocks/lines/dots.yaml

cameras:
    camera1:
        type: perspective

# lights:
#     light1:
#         type: directional
#         direction: [0, 1, -.5]
#         diffuse: .2
#         ambient: 1

sources:
    mapzen:
        mapzen:
        type: TopoJSON
        url: https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson?api_key=mapzen-D8mmijp
    ne_rivers:
        type: GeoJSON
        url: https://gist.githubusercontent.com/sensescape/36c66eef099c2e28f0562e822d1de128/raw/2cad2ab7271822aecefd238a8851951ae611cc43/rivers.geojson

scene:
    background:
        color: [0.266,0.578,0.765,1.0]
layers:
    earth:
        data: { source: mapzen }
        draw:
            polygons:
                style: gradient1
                order: 0
                color: [0.226,0.323,0.480,1.0]

    water:
        data: { source: mapzen, layer: water }
        draw:
            polygons:
                order: 10010
                color: [0.266,0.578,0.765,1.0]

        river:
            filter: { kind: [river,canal,stream,dam,ditch,drain], $zoom: { min: 7 } }
            draw:
                lines:
                    order: 2
                    color: [0.690,0.149,0.000,1.0]
                    width: [[9,0px],[11,6px],[13,0px]]
                lines2:
                    order: 4
                    color: [0.266,0.578,0.765,1.0]
                    width: [[9,0px],[15,10px]]
                lines3:
                    order: 6
                    style: river-glow
                    color: [0.30,0.30,0.00,1.00]
                    width: [[10,5px],[14,40px]]
                lines5:
                    order: 8
                    style: river-dots-glow
                    color: [[9,[1.000,0.725,0.369,1.0]],[10,[1.000,0.725,0.369,1.0]],[18,[0.765,0.408,0.267,1.0]]]
                    width: [[9,0px],[12,9px]]


    ne_rivers:
        data: { source: ne_rivers }
        filter: { $zoom: { max: 14 } }
        draw:
            lines:
                # color: [0.217,0.311,0.620,1.0]
                color: [[1,[0.690,0.149,0.000,1.0]],[10,[0.690,0.149,0.000,1.0]]]
                width: [[4,2px],[8,10px],[10,0px]]
                order: 10000
            lines2:
                color: [0.266,0.578,0.765,1.0]
                width: [[4,1px],[9,6px],[11,0px]]
                order: 10002
            lines4:
                style: river-glow
                color: [0.30,0.30,0.00,1.00]
                width: [[3,1px],[5,5px],[10,50px],[12,0px]]
                order: 10004
                join: round
            lines6:
                style: river-dots-glow
                # color: [[3,[0.00,0.35,0.00,1.0]],[7,[1.000,0.725,0.369,1.0]]]
                color: [[1,[1.000,0.725,0.369,1.0]],[8,[1.000,0.725,0.369,1.0]],[11,[0.765,0.408,0.267,1.0]]]
                width: [[4,0px],[10,20px],[12,0px]]
                order: 10008

styles:
    river-dots-glow:
        base: lines
        mix: [lines-dots-glow]
        shaders:
            defines:
                DOTS_ANIMATE: color.a *=abs(sin(v_texcoord.y-u_time))*.9
            blocks:
                filter: |
                    #ifdef DOTS_ANIMATE
                    DOTS_ANIMATE;
                    #endif
    lines2:
        base: lines

    river-glow:
        base: lines
        mix: [lines-glow]
        shaders:
            defines:
                GLOW_WIDTH: 0.95
                GLOW_BRIGHTNESS: .15

    dots:
        base: lines
        mix: [lines-dots]
        shaders:
            defines:
                DOTS_SIZE: 0.15

    river-dashed:
        base: lines
        dash: [3,6]
        dash_background_color: [0.035,0.092,0.184]
        shaders:
            blocks:
                position: |
                    v_texcoord.y *= 25.;


    gradient1:
        base: polygons
        shaders:
            blocks:
                filter: |
                    // mix white and green with X coordinate
                    color.rgb = mix(vec3(0.854,0.734,0.607), vec3(0.765,0.408,0.267), gl_FragCoord.x / u_resolution.x + gl_FragCoord.y / u_resolution.y);